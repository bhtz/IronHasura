version: '3.4'

services:
  microscope.admin:
    image: ${DOCKER_REGISTRY-}microscope-admin
    ports:
      - 9000:80
    build:
      context: .
      dockerfile: src/Microscope.Admin/Dockerfile
    container_name: smicroscope-admin
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__ConfigurationDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__PersistedGrantDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__IdentityDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__AdminLogDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__AdminAuditLogDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "AdminConfiguration__IdentityAdminBaseUrl=http://127.0.0.1.xip.io:9000"
      - "AdminConfiguration__IdentityAdminRedirectUri=http://127.0.0.1.xip.io:9000/signin-oidc"
      - "AdminConfiguration__IdentityServerBaseUrl=http://127.0.0.1.xip.io"
      - "AdminConfiguration__HasuraConsoleBaseUrl=http://127.0.0.1.xip.io:8080"
      - "AdminConfiguration__RequireHttpsMetadata=false"
      - "IdentityServerData__Clients__0__ClientUri=http://127.0.0.1.xip.io:9000"
      - "IdentityServerData__Clients__0__RedirectUris__0=http://127.0.0.1.xip.io:9000/signin-oidc"
      - "IdentityServerData__Clients__0__FrontChannelLogoutUri=http://127.0.0.1.xip.io:9000/signin-oidc"
      - "IdentityServerData__Clients__0__PostLogoutRedirectUris__0=http://127.0.0.1.xip.io:9000/signout-callback-oidc"
      - "IdentityServerData__Clients__0__AllowedCorsOrigins__0=http://127.0.0.1.xip.io:9000"
      - "IdentityServerData__Clients__1__RedirectUris__0=http://127.0.0.1.xip.io/swagger/oauth2-redirect.html"
      - "Serilog__WriteTo__1__Args__connectionString=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
    command: dotnet Microscope.Admin.dll /seed
    depends_on:
      - postgres
      - microscope.sts.identity
    volumes:
      - "./shared/serilog.json:/app/serilog.json"
      - "./shared/identitydata.json:/app/identitydata.json"
      - "./shared/identityserverdata.json:/app/identityserverdata.json"

  microscope.admin.api:
    image: ${DOCKER_REGISTRY-}microscope-api
    build:
      context: .
      dockerfile: src/Microscope.Admin.Api/Dockerfile
    ports:
      - 5000:80
    environment:
      - "AdminApiConfiguration__RequireHttpsMetadata=false"
      - "AdminApiConfiguration__ApiBaseUrl=http://127.0.0.1.xip.io:5000"
      - "AdminApiConfiguration__IdentityServerBaseUrl=http://127.0.0.1.xip.io"
      - "ConnectionStrings__ConfigurationDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__PersistedGrantDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__IdentityDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__AdminLogDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__AdminAuditLogDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
    container_name: microscope-api
    volumes:
      - "./shared/serilog.json:/app/serilog.json"

  microscope.sts.identity:
    image: ${DOCKER_REGISTRY-}microscope-sts
    ports:
      - 80:80
    build:
      context: .
      dockerfile: src/Microscope.STS.Identity/Dockerfile
    container_name: microscope-sts
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__ConfigurationDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__PersistedGrantDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "ConnectionStrings__IdentityDbConnection=User ID =postgres;Password=root;Server=postgres;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;"
      - "AdminConfiguration__IdentityAdminBaseUrl=http://127.0.0.1.xip.io:9000"
      - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
    depends_on:
      - postgres
    volumes:
      - "./shared/serilog.json:/app/serilog.json"
    networks:
      default:
        aliases:
          - 127.0.0.1.xip.io

  graphql-engine:
    image: hasura/graphql-engine:v1.3.1.cli-migrations
    ports:
    - "8080:8000"
    depends_on:
    - "postgres"
    - microscope.sts.identity
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:root@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: microscope
      HASURA_GRAPHQL_SERVER_PORT: 8000
      # HASURA_GRAPHQL_AUTH_HOOK: http://host.docker.internal:5000/api/auth

  # mssql:
  #   image: "mcr.microsoft.com/mssql/server"
  #   ports:
  #     - 1433:1433
  #   container_name: skoruba-identityserver4-db
  #   environment:
  #     SA_PASSWORD: "${DB_PASSWORD:-Password_123}"
  #     ACCEPT_EULA: "Y"
  #   volumes:
  #     - dbdata:/var/opt/mssql

  postgres:
    image: postgres:12
    ports:
    - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    volumes:
    # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    - db_data:/var/lib/postgresql/data

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge