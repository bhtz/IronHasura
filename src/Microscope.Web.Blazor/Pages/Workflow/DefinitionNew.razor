@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider TokenProvider
@attribute [Authorize]
@page "/workflow-definitions/test"

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Workflow</MudText>

<elsa-studio-root server-url="@Host" monaco-lib-path="_content/Elsa.Designer.Components.Web/monaco-editor/min">
    <elsa-workflow-definition-editor-screen></elsa-workflow-definition-editor-screen>
</elsa-studio-root>

@code
{
    [Inject]
    private IJSRuntime JsRuntime { get; set; }

    public string Host { get; set; }

    public string AccessToken { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Host = _navigationManager.BaseUri;

        var accessTokenResult = await TokenProvider.RequestAccessToken();
        if (accessTokenResult.TryGetToken(out var token))
        {
            AccessToken = token.Value;
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!string.IsNullOrEmpty(AccessToken))
        {
            await this.JsRuntime.InvokeVoidAsync("interop.registerElsaPlugin", "elsa-studio-root", AccessToken);
        }
    }
}
